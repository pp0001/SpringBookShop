ID: com.sap.bookshop.st
_schema-version: '2.1'
version: 0.0.1
modules:
  - name: bookshop-st-db
    type: hdb
    path: db
    parameters:
      memory: 256M
      disk-quota: 256M
      buildpack: https://github.com/cloudfoundry/nodejs-buildpack.git#v1.6.42
    requires:
      - name: bookshop-st-hdi-container
  - name: bookshop-st-srv
    type: java
    path: srv
    parameters:
      memory: 1024M
      disk-quota: 256M
    properties:
      SPRING_PROFILES_ACTIVE: cloud
      JBP_CONFIG_JAVA_OPTS: [java_opts: '-XX:+ForceDebuggingOnDemand ']
    build-parameters:
        ignore: ["*.md"]
        build-result: target/*.jar
    provides:
      - name: srv_api
        properties:
          url: '${default-url}'
    requires:
      - name: bookshop-st-hdi-container
        properties:
          db_service_instance_name: ~{hdi-container-name}
      - name: bookshop-st-uaa

  - name: bookshop-st-app
    type: html5
    path: app
    parameters:
       disk-quota: 256M
       memory: 256M
    build-parameters:
       builder: grunt
    requires:
     - name: srv_api
       group: destinations
       properties:
          forwardAuthToken: true
          strictSSL: false
          name: srv_api
          url: ~{url}
     - name: bookshop-st-uaa
  
  - name: bookshop-broker
    type: nodejs
    path: servicebroker
    parameters:
      disk-quota: 256M
      memory: 256M
      health-check-timeout: 180
      create-service-broker: true # true | false. Default is false. Specifies whether a service broker should be registered for this module.
      service-broker-name: test-bookshop-broker-${space} # Default is ${app-name}. Specifies the name of service broker to register.
      service-broker-user: ~{broker-credentials/user} # Specifies the service broker user value. Mandatory parameter (only if 'create-service-broker' is true).
      service-broker-password: ~{broker-credentials/password} # Specifies the service broker password value. Mandatory parameter (only if 'create-service-broker' is true).
      service-broker-url: ${default-url}/broker # As metadata extensions is using broker middleware the broker url is not the default url.   Mandatory parameter (only if 'create-service-broker' is true).
      service-broker-space-scoped: true # true | false. Default is false. Specifies whether a service broker should be registered as local for the current space.
    requires:
      #- name: fc-apprepo-dt
      - name: srv_api
      - name: broker-credentials
      - name: broker-uaa
    build-parameters:
      builder: npm
      npm-opts:
        no-optional: null
    properties:
      SBF_CATALOG_SUFFIX: '${space}'
      SBF_ENABLE_AUDITLOG: false
      SBF_BROKER_CREDENTIALS: "{ \"~{broker-credentials/user}\": \"~{broker-credentials/password}\" }"
      SBF_SERVICE_CONFIG: |
        {
           "test-bookshop": {
              "extend_catalog": {
                 "metadata": {
                    "sapservice": {
                      "odataprovider": "cap",
                      "odataversion": "v2",
                      "providesui": "true"
                    }
                 }
              },
              "extend_credentials": {
                "per_plan": {
                  "standard": {
                    "endpoints": { 
                      "bookshop": "~{srv_api/url}"
                    },
                    "saasregistryappname": "test-bookshop-service-${space}"
                  }
                }
              }
           }
        }     
  

resources:
  - name: broker-credentials
    properties:
      user: ${generated-user}
      password: ${generated-password}
      
  - name: broker-uaa
    type: com.sap.xs.uaa
    parameters:
      service-plan: broker
      config:
        xsappname: bookshop-${space}
        tenant-mode: shared
        scopes:
          - name: $XSAPPNAME.test
            description: test for bookshop
          - name: "$XSAPPNAME.Onboarding"
            description: Onboarding Callback Access
            grant-as-authority-to-apps:
            - "$XSAPPNAME(application,sap-provisioning,tenant-onboarding)"
        role-templates:
          - name: bookshop_test
            description: test for bookshop
            scope-references:
              - $XSAPPNAME.test

  - name: sales-broker-1
    type: org.cloudfoundry.managed-service
    parameters:
      service: test-sales-broker
      service-plan: standard
      
  - name: bookshop-st-hdi-container
    properties:
      hdi-container-name: '${service-name}'
    type: com.sap.xs.hdi-container

  - name: bookshop-st-uaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      config:
        xsappname: bookshop-st-${space}
        tenant-mode: dedicated
        scopes:
          - name: $XSAPPNAME.admin
          - name: $XSAPPNAME.user
        attributes:
          - name: level
            description: level
            valueType: s
        #       Only for easy testing, you can get JWT via client credential flow with all authorities
        authorities:
          - $XSAPPNAME.admin
          - $XSAPPNAME.user
        role-templates:
          - name: user
            description: user
            scope-references:
              - $XSAPPNAME.user
          - name: admin
            description: admin
            scope-references:
              - $XSAPPNAME.admin
